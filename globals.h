/*
**	Global variables header
**	Automatically generated by Emperor
*/

#ifndef __GLOBALS_H__
#define __GLOBALS_H__
/*
**	Function prototypes
*/

void OpenLibs( void );
void CleanExit(char *);

void AppRegistering( void );
void SavePrefsTree( void );

void InitLists( void );
void CleanupLists( void );

void FreeCommonList( struct List*,UBYTE );

void AppRegistering( void );
void SavePrefsTree( void );

void InitWindows( void );
void InitStuff( void );
void Events( void );
void ProcessMainMenus( UWORD, BOOL );

void Button1_GadgetUp_Evt(void);
void String1_GadgetUp_Evt(void);
void String2_GadgetUp_Evt(void);
void String3_GadgetUp_Evt(void);
void Chooser1_GadgetUp_Evt(void);
void Button2_GadgetUp_Evt(void);
void Button3_GadgetUp_Evt(void);
void Button4_GadgetUp_Evt(void);
void Button10_GadgetUp_Evt(void);

void Window1_CloseWindow_Evt(void);
void Window1_IconifyWindow_Evt(void);
void Window1_UnIconifyWindow_Evt(void);
void Window3_ShowWindow_Evt(void);
void Window4_ShowWindow_Evt(void);

void Ep_InitProgram(void);
void Ep_QuitProgram(void);

void Ep_AllocNode(struct List *, char **, WORD *,UBYTE);

struct Screen *Ep_OpenScreen_Screen1(void);

void Ep_CloseScreen_Screen1(void);

struct Window *Ep_OpenWindow_Window1(void);
struct Window *Ep_OpenWindow_Window2(void);
struct Window *Ep_OpenWindow_Window3(void);
struct Window *Ep_OpenWindow_Window4(void);

void Ep_CloseWindow_Window1(void);
void Ep_CloseWindow_Window2(void);
void Ep_CloseWindow_Window3(void);
void Ep_CloseWindow_Window4(void);

void Menu_Information1_MenuPick_Evt(void);
void Menu_prefs_MenuPick_Evt(void);
void Menu_Quit1_MenuPick_Evt(void);
void Menuitem1_MenuPick_Evt(void);
void Menuitem2_MenuPick_Evt(void);
void Menuitem3_MenuPick_Evt(void);
void Menuitem4_MenuPick_Evt(void);
void Menuitem5_MenuPick_Evt(void);
void Menuitem6_MenuPick_Evt(void);

STRPTR inttostring(LONG);

// My functions declarations
void showpage(char *textca);
struct Node *add_line (struct Gadget *o,char *text,struct Node *nextnode,struct
Window *win);
void addbookmark(void);
void editbookmark(void);
BOOL save_bookmarks(struct List *list);
BOOL load_bookmarks(void);

BOOL WriteCFG(void);
BOOL ReadCFG(void);

/*
**	Library&Interface declaration
*/

struct Library		*IntuitionBase;
struct Library		*LocaleBase;
struct Library		*P96Base;
struct Library		*GadToolsBase;
struct Library		*ASLBase;
struct Library		*DOSBase;
struct Library		*IconBase;
struct Library		*ResourceBase;
struct Library		*WindowBase;
struct Library		*RequesterBase;
struct Library		*ButtonBase;
struct Library		*CheckBoxBase;
struct Library		*ChooserBase;
struct Library		*ClickTabBase;
struct Library		*ColorWheelBase;
struct Library		*DateBrowserBase;
struct Library		*FuelGaugeBase;
struct Library		*GetFileBase;
struct Library		*GetFontBase;
struct Library		*GetScreenModeBase;
struct Library		*GradientSliderBase;
struct Library		*IntegerBase;
struct Library		*LayoutBase;
struct Library		*ListBrowserBase;
struct Library		*PaletteBase;
struct Library		*RadioButtonBase;
struct Library		*ScrollerBase;
struct Library		*SliderBase;
struct Library		*SpaceBase;
struct Library		*SpeedBarBase;
struct Library		*StringBase;
struct Library		*TapeDeckBase;
struct Library		*TextEditorBase;
struct Library		*BevelBase;
struct Library		*BitMapBase;
struct Library		*GlyphBase;
struct Library		*LabelBase;

struct IntuitionIFace		*IIntuition;
struct LocaleIFace		*ILocale;
struct P96IFace		 *IP96;
struct GadToolsIFace		*IGadTools;
struct ASLIFace		*IASL;
struct DOSIFace		*IDOS;
struct IconIFace		*IIcon;
struct ResourceIFace		*IResource;
struct WindowIFace		*IWindow;
struct RequesterIFace		*IRequester;
struct ButtonIFace		*IButton;
struct CheckBoxIFace		*ICheckBox;
struct ChooserIFace		*IChooser;
struct ClickTabIFace		*IClickTab;
struct ColorWheelIFace		*IColorWheel;
struct DateBrowserIFace		*IDateBrowser;
struct FuelGaugeIFace		*IFuelGauge;
struct GetFileIFace		*IGetFile;
struct GetFontIFace		*IGetFont;
struct GetScreenModeIFace		*IGetScreenMode;
struct GradientSliderIFace		*IGradientSlider;
struct IntegerIFace		*IInteger;
struct LayoutIFace		*ILayout;
struct ListBrowserIFace		*IListBrowser;
struct PaletteIFace		*IPalette;
struct RadioButtonIFace		*IRadioButton;
struct ScrollerIFace		*IScroller;
struct SliderIFace		*ISlider;
struct SpaceIFace		*ISpace;
struct SpeedBarIFace		*ISpeedBar;
struct StringIFace		*IString;
struct TapeDeckIFace		*ITapeDeck;
struct TextEditorIFace		*ITextEditor;
struct BevelIFace		*IBevel;
struct BitMapIFace		*IBitMap;
struct GlyphIFace		*IGlyph;
struct LabelIFace		*ILabel;

enum
{
	LID_CHOOSER = 0,
	LID_CKTAB,
	LID_LBROWSE,
	LID_RBUTTON,
	LID_SPBAR
};

/*
**	Gadget&Objects Enumeration
*/

enum
{
	GID_Layout1 = 0,
	GID_Button1,
	GID_Bitmap1,
	GID_String1,
	GID_Button2,
	GID_Space_1_1, 
	GID_String4,
	GID_Button5,
	GID_Layout2,
	GID_String2,
	GID_Label1,
	GID_String3,
	GID_Label2,
	GID_Chooser1,
	GID_Label3,
	GID_Layout4,
	GID_String5,
	GID_Label4,
	GID_Layout3,
	GID_Button3,
	GID_Button4,
	GID_Button6,
	GID_Button7,
	GID_Label5,
	GID_Button8,  
	GID_Layout5,
	GID_Layout6,
	GID_Button9,
	GID_Button10,
	GID_Button11,
	GID_Layout7,
	GID_Listbrowser1,
	GID_Layout_4_1,
	GID_String_4_1,
	GID_Label_4_1,
	GID_Button_4_1,
	GID_LAST
};

enum
{
	OID_WindowObject1 = 0,
	OID_WindowObject2,
	OID_WindowObject3,
	OID_WindowObject4,
	OID_Inforequest1,
	OID_LAST
};

enum
{
	WID_Window1 = 0,
	WID_Window2,
	WID_Window3,
	WID_Window4,
	WID_LAST
};
struct HintInfo	Hint_WindowObject1[1];
struct HintInfo	Hint_WindowObject2[1];
struct HintInfo	Hint_WindowObject3[1];
struct HintInfo	Hint_WindowObject4[1];

struct Screen		*Screen1;

void				*VisualInfo1;

struct Window		*win[WID_LAST];
Object			*obj[OID_LAST];
struct Gadget		*gad[GID_LAST];

struct MsgPort		*AppPort,
				*MsgPort;

struct NewMenu	Menu[13];
struct Menu		*Menustrip;
struct MenuItem	*item;

struct List		*Ep_Chooser_depth_node,
				*Ep_Clicktab_depth_node,
				*Ep_Listbrowser_depth_node, 
				*Ep_Radiobutton_depth_node,
				*Ep_Chooser_BrowserList,
				*Ep_Clicktab_BrowserList,
				*Ep_Listbrowser_BrowserList,
				*Ep_Radiobutton_BrowserList;

struct Catalog		*Catalog;
char Ep_ExtGadReturn[100];

STRPTR urllink;
STRPTR var_width;
STRPTR var_height;
STRPTR var_depth;
STRPTR var_homeurl;

STRPTR NodeString;

char *cmdline;

int	win4_opened;
int	node_todo; //0 - Nothing, 1 - Add, 2 - Edit, 3 - delete
#endif

